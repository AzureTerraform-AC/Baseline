name: Apply_TF_Plan
'on':
  workflow_call:
    inputs:
      path:
        description: 'Specifies the path of the root terraform module.'
        required: true
        type: string
      tf_version:
        description: 'Specifies version of Terraform to use. e.g: 1.1.0 Default=latest.'
        required: false
        type: string
        default: latest
      environment:
        description: 'Specifies the GitHub deployment environment.'
        required: true
        type: string
    secrets:
      arm_client_secret:
        description: Specifies the Azure ARM CLIENT SECRET.
        required: true    

jobs:
  apply-plan:
    if: github.ref == 'refs/heads/deployments' # To update to main branch after tests.
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}    
    defaults:
      run:
        shell: bash
        working-directory: '${{ inputs.path }}'
    env:
      STORAGE_ACCOUNT: ${{ vars.AZ_STORAGE_ACC }}
      CONTAINER_NAME: ${{ vars.AZ_CONTAINER_NAME }}
      RESOURCE_GROUP: ${{ vars.AZ_RESOURCE_GROUP }}
      TF_KEY: ${{ vars.ENV }}-${{ vars.PREFIX }}.tfstate
      TF_VARS: ./env/${{ vars.ENV }}_${{ vars.PREFIX }}.tfvars 
      ARM_SUBSCRIPTION_ID: ${{ vars.arm_subscription_id }}
      ARM_TENANT_ID: ${{ vars.arm_tenant_id }} 
      ARM_CLIENT_ID: ${{ vars.arm_client_id }} 
      ENV: ${{ vars.ENV }}           
      ARM_CLIENT_SECRET: ${{ secrets.arm_client_secret }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.2

    # Setup Terraform Version
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.0.0
        with:
          terraform_version: '${{ inputs.tf_version }}'

    # Initialize Terraform           
      - name: Terraform Init
        id: init
        run: >-
          terraform init
          --backend-config="storage_account_name=${{ env.STORAGE_ACCOUNT }}"
          --backend-config="container_name=${{ env.CONTAINER_NAME }}"
          --backend-config="resource_group_name=${{ env.RESOURCE_GROUP }}"
          --backend-config="key=${{ env.TF_KEY }}"

    # Download the plan artifact
      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ENV }}-terraform-plan
          path: ${{ inputs.path }}
    # Show Terraform Plan
      - name: Terraform Show
        run: terraform show -no-color ${{ inputs.path }}/${{ env.ENV }}.tfplan     
    # Apply Terraform
      - name: Terraform Apply
        run: terraform apply ${{ env.ENV }}.tfplan           
            
