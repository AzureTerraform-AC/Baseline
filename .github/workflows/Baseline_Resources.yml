name: Baseline_Resources
'on':
  workflow_dispatch: null
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
jobs:
  Get_Plan_Variables:
    runs-on: ubuntu-latest
    outputs:
      # az_variables: ${{ steps.get_vars.outputs.variables }}
      resource_group: ${{ steps.get_vars.outputs.az_resource_group }}
      storage_acc: ${{ steps.get_vars.outputs.az_storage_acc }}
      container_name: ${{ steps.get_vars.outputs.az_container_name }}
      tf_key: ${{ steps.get_vars.outputs.tf_key }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure environment
        id: environment
        uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: .env
        

      - name: Get Variables
        id: get_vars
        run: |
          echo "RESOURCE_GROUP=${{ steps.environment.outputs.env.AZ_RESOURCE_GROUP }}" >> $GITHUB_OUTPUT
          echo "STORAGE_ACCOUNT=${{ steps.environment.outputs.env.AZ_STORAGE_ACC }}" >> $GITHUB_OUTPUT
          echo "CONTAINER_NAME=${{ steps.environment.outputs.env.AZ_CONTAINER_NAME }}" >> $GITHUB_OUTPUT
          echo "TF_KEY=${{ steps.environment.outputs.env.TF_KEY }}" >> $GITHUB_OUTPUT
          
  Terraform_Plan:
    needs: Get_Plan_Variables
    uses: AzureTerraform-AC/Baseline/.github/workflows/TF_Plan.yml@dynamic-file-franko
    with:
      path: ./
      tf_version: latest
      tf_vars_file: ./env/dev_baseline.tfvars
      az_resource_group: ${{ needs.Get_Plan_Variables.outputs.resource_group }}
      az_storage_acc: ${{ needs.Get_Plan_Variables.outputs.storage_acc }}
      az_container_name: ${{ needs.Get_Plan_Variables.outputs.container_name }}
      tf_key: ${{ needs.Get_Plan_Variables.outputs.tf_key }}
    secrets:
      arm_client_id: '${{ secrets.ARM_CLIENT_ID }}'
      arm_client_secret: '${{ secrets.ARM_CLIENT_SECRET }}'
      arm_subscription_id: '${{ secrets.ARM_SUBSCRIPTION_ID }}'
      arm_tenant_id: '${{ secrets.ARM_TENANT_ID }}'

  Get_Apply_Variables:
    needs: Terraform_Plan
    runs-on: ubuntu-latest
    outputs:
      az_variables: ${{ steps.get_vars.outputs.variables }}  
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure environment
        id: environment
        uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: .env

      - name: Get Variables
        id: get_vars
        run: |
          echo "AZ_RESOURCE_GROUP=${{ steps.environment.outputs.az_resource_group }}" >> $GITHUB_ENV
          echo "AZ_STORAGE_ACC=${{ steps.environment.outputs.az_storage_acc }}" >> $GITHUB_ENV
          echo "AZ_CONTAINER_NAME=${{ steps.environment.outputs.az_container_name }}" >> $GITHUB_ENV
          echo "TF_KEY=${{ steps.environment.outputs.tf_key }}" >> $GITHUB_ENV       

  Terraform_Apply:
    needs: Get_Apply_Variables
    uses: AzureTerraform-AC/Baseline/.github/workflows/TF_Apply.yml@dynamic-file-franko
    with:
      path: ./
      tf_version: latest
      tf_vars_file: ./env/dev_baseline.tfvars
      az_resource_group: ${{fromJson(needs.Get_Plan_Variables.outputs.az_variables).az_resource_group}}
      az_storage_acc: ${{fromJson(needs.Get_Plan_Variables.outputs.az_variables).az_storage_acc}}
      az_container_name: ${{fromJson(needs.Get_Plan_Variables.outputs.az_variables).az_container_name}}
      tf_key: ${{fromJson(needs.Get_Plan_Variables.outputs.az_variables).tf_key}}
    secrets:
      arm_client_id: '${{ secrets.ARM_CLIENT_ID }}'
      arm_client_secret: '${{ secrets.ARM_CLIENT_SECRET }}'
      arm_subscription_id: '${{ secrets.ARM_SUBSCRIPTION_ID }}'
      arm_tenant_id: '${{ secrets.ARM_TENANT_ID }}'
