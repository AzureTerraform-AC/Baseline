name: "Baseline_Resources"
on:
  workflow_dispatch: #Allows you to run this workflow manually from the Actions tab
  pull_request: 
    paths-ignore: 
      - '*.md'    
  push:
      branches:
        - deployments  
permissions: write-all  # To update and ensure least priviledge is granted.
  # contents: write
  # issues: write    
jobs:
  Terraform_Plan:
    strategy:
      max-parallel: 1
      matrix:
        environment: [sbx-plan, uat-plan, prd-plan]

    uses: ./.github/workflows/TF_Plan.yml
    with:
      environment: ${{ vars.ENVIRONEMNT }}
      path: ./           
      tf_version: latest 
      tf_vars_file: ./env/${{ vars.ENVIRONEMNT }}_baseline.tfvars            
      az_resource_group: ${{ vars.az_resource_group }}     
      az_storage_acc: ${{ vars.az_storage_acc }}  
      az_container_name: ${{ vars.az_container_name }}
      prefix: ${{ vars.prefix }}
      arm_client_id: ${{ vars.ARM_CLIENT_ID }}            
      arm_subscription_id: ${{ vars.ARM_SUBSCRIPTION_ID }} 
      arm_tenant_id: ${{ vars.ARM_TENANT_ID }}       
    secrets:
      arm_client_secret: ${{ secrets.ARM_CLIENT_SECRET }} 

  Terraform_Apply:
    needs: Terraform_Plan
    strategy:
      max-parallel: 1
      matrix:
        environment: [sbx-plan, uat-plan, prd-plan]

    uses: ./.github/workflows/TF_Apply.yml
    with:
      environment: ${{ vars.environment }}      
      path: ./           
      tf_version: latest 
      tf_vars_file: ./env/${{ vars.environment }}_baseline.tfvars       
      az_resource_group: ${{ vars.az_resource_group }}     
      az_storage_acc: ${{ vars.az_storage_acc }}  
      az_container_name: ${{ vars.az_container_name }}
      prefix: ${{ vars.prefix }}    
      arm_client_id: ${{ vars.arm_client_id }}            
      arm_subscription_id: ${{ vars.arm_subscription_id }} 
      arm_tenant_id: ${{ vars.arm_tenant_id }}         
    secrets:
      arm_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
   
