name: Baseline_Resources
'on':
  workflow_dispatch: null
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
jobs:
  Get_Plan_Variables:
    runs-on: ubuntu-latest
    outputs:
      az_variables: ${{ steps.get_vars.outputs.variables }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure environment
        id: environment
        uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: .env

      - name: Get Variables
        id: get_vars
        run: |
          echo "::set-output name=variables::az_resource_group=${{ steps.environment.outputs.az_resource_group }},az_storage_acc=${{ steps.environment.outputs.az_storage_acc }},az_container_name=${{ steps.environment.outputs.az_container_name }},tf_key=${{ steps.environment.outputs.tf_key }}"

          
  Terraform_Plan:
    needs: Get_Plan_Variables
    uses: AzureTerraform-AC/Baseline/.github/workflows/TF_Plan.yml@dynamic-file
    with:
      path: ./
      tf_version: latest
      tf_vars_file: ./env/dev_baseline.tfvars
      az_resource_group: ${{fromJson(needs.Get_Plan_Variables.outputs.az_variables).az_resource_group}}
      az_storage_acc: ${{fromJson(needs.Get_Plan_Variables.outputs.az_variables).az_storage_acc}}
      az_container_name: ${{fromJson(needs.Get_Plan_Variables.outputs.az_variables).az_container_name}}
      tf_key: ${{fromJson(needs.Get_Plan_Variables.outputs.az_variables).tf_key}}
    secrets:
      arm_client_id: '${{ secrets.ARM_CLIENT_ID }}'
      arm_client_secret: '${{ secrets.ARM_CLIENT_SECRET }}'
      arm_subscription_id: '${{ secrets.ARM_SUBSCRIPTION_ID }}'
      arm_tenant_id: '${{ secrets.ARM_TENANT_ID }}'

  Get_Apply_Variables:
    needs: Terraform_Plan
    runs-on: ubuntu-latest
    outputs:
      az_variables: ${{ steps.get_vars.outputs.variables }}  
    needs: Terraform_Plan
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure environment
        id: environment
        uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: .env

      - name: Get Variables
        id: get_vars
        run: |
          echo "::set-output name=variables::az_resource_group=${{ steps.environment.outputs.az_resource_group }},az_storage_acc=${{ steps.environment.outputs.az_storage_acc }},az_container_name=${{ steps.environment.outputs.az_container_name }},tf_key=${{ steps.environment.outputs.tf_key }}"

  Terraform_Apply:
    needs: Get_Apply_Variables
    uses: AzureTerraform-AC/Baseline/.github/workflows/TF_Apply.yml@dynamic-file
    with:
      path: ./
      tf_version: latest
      tf_vars_file: ./env/dev_baseline.tfvars
      az_resource_group: ${{fromJson(needs.Get_Plan_Variables.outputs.az_variables).az_resource_group}}
      az_storage_acc: ${{fromJson(needs.Get_Plan_Variables.outputs.az_variables).az_storage_acc}}
      az_container_name: ${{fromJson(needs.Get_Plan_Variables.outputs.az_variables).az_container_name}}
      tf_key: ${{fromJson(needs.Get_Plan_Variables.outputs.az_variables).tf_key}}
    secrets:
      arm_client_id: '${{ secrets.ARM_CLIENT_ID }}'
      arm_client_secret: '${{ secrets.ARM_CLIENT_SECRET }}'
      arm_subscription_id: '${{ secrets.ARM_SUBSCRIPTION_ID }}'
      arm_tenant_id: '${{ secrets.ARM_TENANT_ID }}'
